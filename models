#  
#     Script: DATA ANALYSIS FOR SYSTEMATIC REVIEW:
#     Aim: estimate response of pests (intrinsic rate of increase) to temperature
#          across categorical variables (taxa, feeding guilds, host plant, etc)


#### 1. Load Dataset ####
rm(list=ls())
#library(tidyverse)
library(dplyr)
library(readr)
library(stringr)
library(ggplot2)
library(svglite)
#load data:
IR_data <-read_csv("/Users/Ecologia/Documents/USUARIOS/DARÍO/intrinsic_growth2.csv") %>%
  filter(Filter_3 == "yes") %>% #select only those which have passed the filter 3 in the source csv
  mutate(growth_rate = replace(growth_rate, growth_rate <= 0,0))%>% #we assign 0 to negative values of intrinsic rates (biological nonsense)
  filter(as.numeric(temperature)<50) %>% #exclude possible missleading points
  select(Authors,`Article Title`,Filter_3,Approach,Subapproach,temperature,growth_rate,
         error,n_1,order,family,genus,species,feeding_guild,h_p_family,
         diet_family,RH,daylength,lat,lon)%>% #subset variables
glimpse() # similar as str()
#since some numerical variables are read as characters, we change them to dbl
IR_data$temperature <- as.numeric(IR_data$temperature)
IR_data$growth_rate <- as.numeric(IR_data$growth_rate)
IR_data$error <- as.numeric(IR_data$n_1)
IR_data$RH <- as.numeric(IR_data$RH)
IR_data$lat <- as.numeric(IR_data$lat)

#### Define fitting function ####
#load training artificial data
train_data <- read.table("train.csv",sep=";",dec=",",header=TRUE)
colnames(train_data) <- c("temp","r")
train_data$temp <- as.numeric(train_data$temp)
train_data$r <- as.numeric(train_data$r)
View(train_data)
ggplot(train_data,aes(x=temp,y=r))+
  geom_point()+
  stat_smooth(method= "loess")+
  theme_classic()

# We use a Brière-1 model (Briere et al., 1999)
briere1 <- function(a, temp, Tmin, Tmax){
  a*temp*(temp-Tmin)*(Tmax-temp)^(1/2)
}


#### enfoque con nls() ####

fitted_br1 <- nls(r ~ briere1(a,temp,Tmin,Tmax),
                   data = train_data,
                   start = list(a = 0.0002,
                                Tmin =7.5,
                                Tmax= 33.5))

#problemas de ajuste. Ver starting con plots sucesivos
par(mfrow=c(2,2))
temp <- train_data$temp
growth <- temp_data$r
plot(temp,growth)
plot(temp,briere1(a=0.0002,Tmin=7.5,Tmax=33.5,temp)) #ese valor de la a va mejor
plot(temp,briere1(a=0.00002,Tmin=7.5,Tmax=33.5,temp))
plot(temp,briere1(a=0.2,Tmin=7.5,Tmax=33.5,temp))
#repetimos el análisis
fitted_br1 <- nls(r ~ briere1(a,temp,Tmin,Tmax),
                  data = train_data,
                  start = list(a = 0.00017,
                               Tmin =8,
                               Tmax= 33.5))

# esos starting deberían valer pero no valen
#plotear manualmente (modifico un poco los parámetros viendo el ajuste gráfico)
train_manual <- data.frame(train_data$temp,train_data$r,
                           briere1(a=0.00017,temp=temp,Tmin=8,Tmax=33.5))
colnames(train_manual) <- c("temp","r","fits")

ggplot(data = train_manual)+
  geom_point(aes(x=temp,y=r))+
  geom_point(aes(x=temp,y=fits),alpha=0)+
  geom_smooth(aes(x=temp,y=fits))+
  theme_classic()+
  geom_smooth(aes(x=temp,y=r),color="lightcoral")

#### test 2: probar con datos de ácaros de nuestra revisión ####
acari <- IR_data %>%
  filter(order == "Acari>Prostigmata" | 
           order == "Acari>Trombidiformes")%>%
  mutate(order = "Acari")%>%
  glimpse()
acari_test <- tibble(temp=acari$temperature,r=acari$growth_rate)
ggplot(acari_test,aes(x=temp,y=r))+
  geom_point()+
  stat_smooth(method= "loess")+
  theme_classic()

fitted_br1 <- nls(r ~ briere1(a,temp,Tmin,Tmax),
                  data = acari_test,
                  start = list(a = 0.00017,
                               Tmin =4,
                               Tmax= 37))
